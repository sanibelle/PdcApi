// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Pdc.Infrastructure.Data;

#nullable disable

namespace Pdc.Infrastructure.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250317031118_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Pdc.Domain.Entities.Common.CompetencyElement", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<Guid?>("MinisterialCompetencyId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Position")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("MinisterialCompetencyId");

                    b.ToTable("CompetencyElement");
                });

            modelBuilder.Entity("Pdc.Domain.Entities.Common.ComplementaryInformations", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("ContentElementId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.HasKey("Id");

                    b.HasIndex("ContentElementId");

                    b.ToTable("ComplementaryInformations");
                });

            modelBuilder.Entity("Pdc.Domain.Entities.Common.PerformanceCriteria", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CompetencyElementId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<int>("Position")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CompetencyElementId");

                    b.ToTable("PerformanceCriteria");
                });

            modelBuilder.Entity("Pdc.Domain.Entities.Common.Units", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int?>("Denominator")
                        .HasColumnType("int");

                    b.Property<int?>("Numerator")
                        .HasColumnType("int");

                    b.Property<int>("WholeUnits")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Units");
                });

            modelBuilder.Entity("Pdc.Domain.Entities.CourseFramework.ProgramOfStudy", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(8)
                        .HasColumnType("nvarchar(8)");

                    b.Property<Guid>("ComplementaryUnitsId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("GeneralUnitsId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<double>("MonthsDuration")
                        .HasColumnType("float");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<Guid?>("OptionnalUnitsId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateOnly>("PublishedOn")
                        .HasColumnType("date");

                    b.Property<int>("Sanction")
                        .HasColumnType("int");

                    b.Property<int>("SpecificDurationHours")
                        .HasColumnType("int");

                    b.Property<Guid?>("SpecificUnitsId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("TotalDurationHours")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ComplementaryUnitsId")
                        .IsUnique();

                    b.HasIndex("GeneralUnitsId")
                        .IsUnique();

                    b.HasIndex("OptionnalUnitsId")
                        .IsUnique()
                        .HasFilter("[OptionnalUnitsId] IS NOT NULL");

                    b.HasIndex("SpecificUnitsId")
                        .IsUnique()
                        .HasFilter("[SpecificUnitsId] IS NOT NULL");

                    b.ToTable("ProgramOfStudies");
                });

            modelBuilder.Entity("Pdc.Domain.Entities.MinisterialSpecification.MinisterialCompetency", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(4)
                        .HasColumnType("nvarchar(4)");

                    b.Property<bool>("IsMandatory")
                        .HasColumnType("bit");

                    b.Property<bool>("IsOptionnal")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ProgramOfStudyId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("StatementOfCompetency")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<Guid?>("UnitsId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("ProgramOfStudyId");

                    b.HasIndex("UnitsId");

                    b.ToTable("MinisterialCompetency");
                });

            modelBuilder.Entity("Pdc.Domain.Entities.MinisterialSpecification.MinisterialRealisationContext", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<Guid?>("MinisterialCompetencyId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("MinisterialCompetencyId");

                    b.ToTable("MinisterialRealisationContext");
                });

            modelBuilder.Entity("Pdc.Domain.Entities.Common.CompetencyElement", b =>
                {
                    b.HasOne("Pdc.Domain.Entities.MinisterialSpecification.MinisterialCompetency", null)
                        .WithMany("CompetencyElements")
                        .HasForeignKey("MinisterialCompetencyId");
                });

            modelBuilder.Entity("Pdc.Domain.Entities.Common.ComplementaryInformations", b =>
                {
                    b.HasOne("Pdc.Domain.Entities.Common.PerformanceCriteria", null)
                        .WithMany("ContentSpecifications")
                        .HasForeignKey("ContentElementId");
                });

            modelBuilder.Entity("Pdc.Domain.Entities.Common.PerformanceCriteria", b =>
                {
                    b.HasOne("Pdc.Domain.Entities.Common.CompetencyElement", null)
                        .WithMany("PerformanceCriterias")
                        .HasForeignKey("CompetencyElementId");
                });

            modelBuilder.Entity("Pdc.Domain.Entities.CourseFramework.ProgramOfStudy", b =>
                {
                    b.HasOne("Pdc.Domain.Entities.Common.Units", "ComplementaryUnits")
                        .WithOne()
                        .HasForeignKey("Pdc.Domain.Entities.CourseFramework.ProgramOfStudy", "ComplementaryUnitsId")
                        .OnDelete(DeleteBehavior.ClientCascade)
                        .IsRequired();

                    b.HasOne("Pdc.Domain.Entities.Common.Units", "GeneralUnits")
                        .WithOne()
                        .HasForeignKey("Pdc.Domain.Entities.CourseFramework.ProgramOfStudy", "GeneralUnitsId")
                        .OnDelete(DeleteBehavior.ClientCascade)
                        .IsRequired();

                    b.HasOne("Pdc.Domain.Entities.Common.Units", "OptionnalUnits")
                        .WithOne()
                        .HasForeignKey("Pdc.Domain.Entities.CourseFramework.ProgramOfStudy", "OptionnalUnitsId")
                        .OnDelete(DeleteBehavior.ClientCascade);

                    b.HasOne("Pdc.Domain.Entities.Common.Units", "SpecificUnits")
                        .WithOne()
                        .HasForeignKey("Pdc.Domain.Entities.CourseFramework.ProgramOfStudy", "SpecificUnitsId")
                        .OnDelete(DeleteBehavior.ClientCascade);

                    b.Navigation("ComplementaryUnits");

                    b.Navigation("GeneralUnits");

                    b.Navigation("OptionnalUnits");

                    b.Navigation("SpecificUnits");
                });

            modelBuilder.Entity("Pdc.Domain.Entities.MinisterialSpecification.MinisterialCompetency", b =>
                {
                    b.HasOne("Pdc.Domain.Entities.CourseFramework.ProgramOfStudy", null)
                        .WithMany("Competencies")
                        .HasForeignKey("ProgramOfStudyId");

                    b.HasOne("Pdc.Domain.Entities.Common.Units", "Units")
                        .WithMany()
                        .HasForeignKey("UnitsId");

                    b.Navigation("Units");
                });

            modelBuilder.Entity("Pdc.Domain.Entities.MinisterialSpecification.MinisterialRealisationContext", b =>
                {
                    b.HasOne("Pdc.Domain.Entities.MinisterialSpecification.MinisterialCompetency", null)
                        .WithMany("RealisationContexts")
                        .HasForeignKey("MinisterialCompetencyId");
                });

            modelBuilder.Entity("Pdc.Domain.Entities.Common.CompetencyElement", b =>
                {
                    b.Navigation("PerformanceCriterias");
                });

            modelBuilder.Entity("Pdc.Domain.Entities.Common.PerformanceCriteria", b =>
                {
                    b.Navigation("ContentSpecifications");
                });

            modelBuilder.Entity("Pdc.Domain.Entities.CourseFramework.ProgramOfStudy", b =>
                {
                    b.Navigation("Competencies");
                });

            modelBuilder.Entity("Pdc.Domain.Entities.MinisterialSpecification.MinisterialCompetency", b =>
                {
                    b.Navigation("CompetencyElements");

                    b.Navigation("RealisationContexts");
                });
#pragma warning restore 612, 618
        }
    }
}
