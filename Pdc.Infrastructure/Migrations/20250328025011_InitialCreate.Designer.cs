// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Pdc.Infrastructure.Data;

#nullable disable

namespace Pdc.Infrastructure.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250328025011_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.HasSequence("ChangeRecordEntitySequence");

            modelBuilder.Entity("ChangeableEntityCourseFrameworkEntity", b =>
                {
                    b.Property<Guid>("AssedElementsId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CourseFrameworkEntityCourseCode")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("AssedElementsId", "CourseFrameworkEntityCourseCode");

                    b.HasIndex("CourseFrameworkEntityCourseCode");

                    b.ToTable("ChangeableEntityCourseFrameworkEntity");
                });

            modelBuilder.Entity("CourseFrameworkEntityCourseFrameworkEntity", b =>
                {
                    b.Property<string>("CourseFrameworkEntityCourseCode")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("PrerequisitesCourseCode")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("CourseFrameworkEntityCourseCode", "PrerequisitesCourseCode");

                    b.HasIndex("PrerequisitesCourseCode");

                    b.ToTable("CourseFrameworkEntityCourseFrameworkEntity");
                });

            modelBuilder.Entity("Pdc.Domain.Entities.Common.Units", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int?>("Denominator")
                        .HasColumnType("int");

                    b.Property<int?>("Numerator")
                        .HasColumnType("int");

                    b.Property<int>("WholeUnit")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Units");
                });

            modelBuilder.Entity("Pdc.Infrastructure.Entities.CourseFramework.CourseFrameworkCompetencyEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CompetencyDistribution")
                        .HasMaxLength(5000)
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CompetencyId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("CourseFrameworkCompetencyElementId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("CourseFrameworkId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("Hours")
                        .HasColumnType("int");

                    b.Property<bool>("IsAssedElement")
                        .HasColumnType("bit");

                    b.Property<int>("ReachedTaxonomyLevel")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(6);

                    b.HasKey("Id");

                    b.HasIndex("CompetencyId");

                    b.HasIndex("CourseFrameworkCompetencyElementId");

                    b.HasIndex("CourseFrameworkId");

                    b.ToTable("CourseFrameworkCompetencyEntity");
                });

            modelBuilder.Entity("Pdc.Infrastructure.Entities.CourseFramework.CourseFrameworkEntity", b =>
                {
                    b.Property<string>("CourseCode")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("CourseCharacteristics")
                        .IsRequired()
                        .HasMaxLength(5000)
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("CurrentVersionId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("FinalCourseObjective")
                        .IsRequired()
                        .HasMaxLength(5000)
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Hours")
                        .HasColumnType("TINYINT UNSIGNED");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("OtherSpecifications")
                        .HasMaxLength(5000)
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Semester")
                        .HasColumnType("TINYINT UNSIGNED");

                    b.Property<string>("StatementOfComplexAuthenticTask")
                        .IsRequired()
                        .HasMaxLength(5000)
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TaskPresentation")
                        .IsRequired()
                        .HasMaxLength(5000)
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("UnitsId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("CourseCode");

                    b.HasIndex("CurrentVersionId");

                    b.HasIndex("UnitsId");

                    b.ToTable("CourseFrameworkEntity");
                });

            modelBuilder.Entity("Pdc.Infrastructure.Entities.CourseFramework.CourseFrameworkPerformanceCriteriaEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CourseFrameworkId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("CourseFrameworkPerformanceCriteriaId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<bool>("IsAssedElement")
                        .HasColumnType("bit");

                    b.Property<Guid>("PerformanceCriteriaId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("TeachedLevel")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CourseFrameworkId");

                    b.HasIndex("CourseFrameworkPerformanceCriteriaId");

                    b.HasIndex("PerformanceCriteriaId");

                    b.ToTable("CourseFrameworkPerformanceCriteriaEntity");
                });

            modelBuilder.Entity("Pdc.Infrastructure.Entities.CourseFramework.CourseFrameworkPerformanceEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CompetencyElementId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CourseFrameworkId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("Hours")
                        .HasColumnType("int");

                    b.Property<bool>("IsAssedElement")
                        .HasColumnType("bit");

                    b.Property<int>("ReachedTaxonomyLevel")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(6);

                    b.Property<int>("TeachedLevel")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(1);

                    b.HasKey("Id");

                    b.HasIndex("CompetencyElementId");

                    b.HasIndex("CourseFrameworkId");

                    b.ToTable("CourseFrameworkPerformanceEntity");
                });

            modelBuilder.Entity("Pdc.Infrastructure.Entities.CourseFramework.ProgramOfStudyEntity", b =>
                {
                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(450)");

                    b.Property<Guid>("ComplementaryUnitsId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("GeneralUnitsId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("MonthsDuration")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<Guid?>("OptionnalUnitsId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateOnly>("PublishedOn")
                        .HasColumnType("date");

                    b.Property<int>("Sanction")
                        .HasColumnType("int");

                    b.Property<int>("SpecificDurationHours")
                        .HasColumnType("int");

                    b.Property<Guid?>("SpecificUnitsId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("TotalDurationHours")
                        .HasColumnType("int");

                    b.HasKey("Code");

                    b.HasIndex("ComplementaryUnitsId")
                        .IsUnique();

                    b.HasIndex("GeneralUnitsId")
                        .IsUnique();

                    b.HasIndex("OptionnalUnitsId")
                        .IsUnique()
                        .HasFilter("[OptionnalUnitsId] IS NOT NULL");

                    b.HasIndex("SpecificUnitsId")
                        .IsUnique()
                        .HasFilter("[SpecificUnitsId] IS NOT NULL");

                    b.ToTable("ProgramOfStudies");
                });

            modelBuilder.Entity("Pdc.Infrastructure.Entities.MinisterialSpecification.CompetencyEntity", b =>
                {
                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(450)");

                    b.Property<Guid>("CurrentVersionId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsMandatory")
                        .HasColumnType("bit");

                    b.Property<bool>("IsOptionnal")
                        .HasColumnType("bit");

                    b.Property<string>("ProgramOfStudyCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("StatementOfCompetency")
                        .IsRequired()
                        .HasMaxLength(1500)
                        .HasColumnType("nvarchar(1500)");

                    b.Property<Guid?>("UnitsId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Code");

                    b.HasIndex("CurrentVersionId");

                    b.HasIndex("ProgramOfStudyCode");

                    b.HasIndex("UnitsId");

                    b.ToTable("Competencies");
                });

            modelBuilder.Entity("Pdc.Infrastructure.Entities.Versioning.ChangeDetailEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("ChangeRecordEntityId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ChangeRecordId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("ChangeType")
                        .HasColumnType("int");

                    b.Property<Guid>("ChangeableId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("OldValue")
                        .HasMaxLength(5000)
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ChangeRecordEntityId");

                    b.HasIndex("ChangeRecordId");

                    b.HasIndex("ChangeableId");

                    b.ToTable("ChangeDetailEntity");
                });

            modelBuilder.Entity("Pdc.Infrastructure.Entities.Versioning.ChangeRecordEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOn")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<string>("Description")
                        .HasMaxLength(5000)
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDraft")
                        .HasColumnType("bit");

                    b.Property<Guid?>("NextVersionId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("ParentVersionId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("VersionNumber")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("NEXT VALUE FOR [ChangeRecordEntitySequence]");

                    SqlServerPropertyBuilderExtensions.UseSequence(b.Property<int>("VersionNumber"));

                    b.HasKey("Id");

                    b.HasIndex("NextVersionId");

                    b.HasIndex("ParentVersionId");

                    b.ToTable("ChangeRecordEntity");
                });

            modelBuilder.Entity("Pdc.Infrastructure.Entities.Versioning.ChangeableEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasMaxLength(34)
                        .HasColumnType("nvarchar(34)");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasMaxLength(5000)
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Changeables", (string)null);

                    b.HasDiscriminator().HasValue("ChangeableEntity");

                    b.UseTphMappingStrategy();
                });

            modelBuilder.Entity("Pdc.Infrastructure.Entities.Versioning.ComplementaryInformationEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("ChangeRecordEntityId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ChangeRecordId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("ChangeableEntityId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ChangeableId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("ModifiedOn")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<string>("Text")
                        .IsRequired()
                        .HasMaxLength(5000)
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ChangeRecordEntityId");

                    b.HasIndex("ChangeRecordId");

                    b.HasIndex("ChangeableEntityId");

                    b.HasIndex("ChangeableId");

                    b.ToTable("ComplementaryInformationEntity");
                });

            modelBuilder.Entity("Pdc.Infrastructure.Entities.CourseFramework.ContentElementEntity", b =>
                {
                    b.HasBaseType("Pdc.Infrastructure.Entities.Versioning.ChangeableEntity");

                    b.Property<Guid?>("CourseFrameworkPerformanceCriteriaEntityId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CourseFrameworkPerformanceCriteriaId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsAssedElement")
                        .HasColumnType("bit");

                    b.Property<int>("TeachedLevel")
                        .HasColumnType("int");

                    b.HasIndex("CourseFrameworkPerformanceCriteriaEntityId");

                    b.HasIndex("CourseFrameworkPerformanceCriteriaId");

                    b.HasDiscriminator().HasValue("ContentElementEntity");
                });

            modelBuilder.Entity("Pdc.Infrastructure.Entities.MinisterialSpecification.CompetencyElementEntity", b =>
                {
                    b.HasBaseType("Pdc.Infrastructure.Entities.Versioning.ChangeableEntity");

                    b.Property<string>("CompetencyId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("Position")
                        .HasColumnType("int");

                    b.HasIndex("CompetencyId");

                    b.ToTable("Changeables", t =>
                        {
                            t.Property("Position")
                                .HasColumnName("CompetencyElementEntity_Position");
                        });

                    b.HasDiscriminator().HasValue("CompetencyElementEntity");
                });

            modelBuilder.Entity("Pdc.Infrastructure.Entities.MinisterialSpecification.PerformanceCriteriaEntity", b =>
                {
                    b.HasBaseType("Pdc.Infrastructure.Entities.Versioning.ChangeableEntity");

                    b.Property<int>("Position")
                        .HasColumnType("int");

                    b.HasDiscriminator().HasValue("PerformanceCriteriaEntity");
                });

            modelBuilder.Entity("Pdc.Infrastructure.Entities.MinisterialSpecification.RealisationContextEntity", b =>
                {
                    b.HasBaseType("Pdc.Infrastructure.Entities.Versioning.ChangeableEntity");

                    b.Property<string>("CompetencyCode")
                        .HasColumnType("nvarchar(450)");

                    b.HasIndex("CompetencyCode");

                    b.HasDiscriminator().HasValue("RealisationContextEntity");
                });

            modelBuilder.Entity("ChangeableEntityCourseFrameworkEntity", b =>
                {
                    b.HasOne("Pdc.Infrastructure.Entities.Versioning.ChangeableEntity", null)
                        .WithMany()
                        .HasForeignKey("AssedElementsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Pdc.Infrastructure.Entities.CourseFramework.CourseFrameworkEntity", null)
                        .WithMany()
                        .HasForeignKey("CourseFrameworkEntityCourseCode")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("CourseFrameworkEntityCourseFrameworkEntity", b =>
                {
                    b.HasOne("Pdc.Infrastructure.Entities.CourseFramework.CourseFrameworkEntity", null)
                        .WithMany()
                        .HasForeignKey("CourseFrameworkEntityCourseCode")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Pdc.Infrastructure.Entities.CourseFramework.CourseFrameworkEntity", null)
                        .WithMany()
                        .HasForeignKey("PrerequisitesCourseCode")
                        .OnDelete(DeleteBehavior.ClientCascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Pdc.Infrastructure.Entities.CourseFramework.CourseFrameworkCompetencyEntity", b =>
                {
                    b.HasOne("Pdc.Infrastructure.Entities.MinisterialSpecification.CompetencyEntity", "Competency")
                        .WithMany()
                        .HasForeignKey("CompetencyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Pdc.Infrastructure.Entities.CourseFramework.CourseFrameworkEntity", null)
                        .WithMany("CourseFrameworkCompetencyElements")
                        .HasForeignKey("CourseFrameworkCompetencyElementId");

                    b.HasOne("Pdc.Infrastructure.Entities.CourseFramework.CourseFrameworkEntity", "CourseFramework")
                        .WithMany()
                        .HasForeignKey("CourseFrameworkId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Competency");

                    b.Navigation("CourseFramework");
                });

            modelBuilder.Entity("Pdc.Infrastructure.Entities.CourseFramework.CourseFrameworkEntity", b =>
                {
                    b.HasOne("Pdc.Infrastructure.Entities.Versioning.ChangeRecordEntity", "CurrentVersion")
                        .WithMany()
                        .HasForeignKey("CurrentVersionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Pdc.Domain.Entities.Common.Units", "Units")
                        .WithMany()
                        .HasForeignKey("UnitsId")
                        .OnDelete(DeleteBehavior.ClientCascade)
                        .IsRequired();

                    b.OwnsOne("Pdc.Domain.Entities.Common.Weighting", "Weighting", b1 =>
                        {
                            b1.Property<string>("CourseFrameworkEntityCourseCode")
                                .HasColumnType("nvarchar(450)");

                            b1.Property<int>("LaboratoryHours")
                                .HasColumnType("TINYINT UNSIGNED");

                            b1.Property<int>("PersonnalWorkHours")
                                .HasColumnType("TINYINT UNSIGNED");

                            b1.Property<int>("TheoryHours")
                                .HasColumnType("TINYINT UNSIGNED");

                            b1.HasKey("CourseFrameworkEntityCourseCode");

                            b1.ToTable("CourseFrameworkEntity");

                            b1.WithOwner()
                                .HasForeignKey("CourseFrameworkEntityCourseCode");
                        });

                    b.Navigation("CurrentVersion");

                    b.Navigation("Units");

                    b.Navigation("Weighting")
                        .IsRequired();
                });

            modelBuilder.Entity("Pdc.Infrastructure.Entities.CourseFramework.CourseFrameworkPerformanceCriteriaEntity", b =>
                {
                    b.HasOne("Pdc.Infrastructure.Entities.CourseFramework.CourseFrameworkEntity", "CourseFramework")
                        .WithMany()
                        .HasForeignKey("CourseFrameworkId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Pdc.Infrastructure.Entities.CourseFramework.CourseFrameworkEntity", null)
                        .WithMany("CourseFrameworkPerformanceCriterias")
                        .HasForeignKey("CourseFrameworkPerformanceCriteriaId");

                    b.HasOne("Pdc.Infrastructure.Entities.MinisterialSpecification.PerformanceCriteriaEntity", "PerformanceCriteria")
                        .WithMany()
                        .HasForeignKey("PerformanceCriteriaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CourseFramework");

                    b.Navigation("PerformanceCriteria");
                });

            modelBuilder.Entity("Pdc.Infrastructure.Entities.CourseFramework.CourseFrameworkPerformanceEntity", b =>
                {
                    b.HasOne("Pdc.Infrastructure.Entities.MinisterialSpecification.CompetencyElementEntity", "CompetencyElement")
                        .WithMany()
                        .HasForeignKey("CompetencyElementId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Pdc.Infrastructure.Entities.CourseFramework.CourseFrameworkEntity", "CourseFramework")
                        .WithMany()
                        .HasForeignKey("CourseFrameworkId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CompetencyElement");

                    b.Navigation("CourseFramework");
                });

            modelBuilder.Entity("Pdc.Infrastructure.Entities.CourseFramework.ProgramOfStudyEntity", b =>
                {
                    b.HasOne("Pdc.Domain.Entities.Common.Units", "ComplementaryUnits")
                        .WithOne()
                        .HasForeignKey("Pdc.Infrastructure.Entities.CourseFramework.ProgramOfStudyEntity", "ComplementaryUnitsId")
                        .OnDelete(DeleteBehavior.ClientCascade)
                        .IsRequired();

                    b.HasOne("Pdc.Domain.Entities.Common.Units", "GeneralUnits")
                        .WithOne()
                        .HasForeignKey("Pdc.Infrastructure.Entities.CourseFramework.ProgramOfStudyEntity", "GeneralUnitsId")
                        .OnDelete(DeleteBehavior.ClientCascade)
                        .IsRequired();

                    b.HasOne("Pdc.Domain.Entities.Common.Units", "OptionnalUnits")
                        .WithOne()
                        .HasForeignKey("Pdc.Infrastructure.Entities.CourseFramework.ProgramOfStudyEntity", "OptionnalUnitsId")
                        .OnDelete(DeleteBehavior.ClientCascade);

                    b.HasOne("Pdc.Domain.Entities.Common.Units", "SpecificUnits")
                        .WithOne()
                        .HasForeignKey("Pdc.Infrastructure.Entities.CourseFramework.ProgramOfStudyEntity", "SpecificUnitsId")
                        .OnDelete(DeleteBehavior.ClientCascade);

                    b.Navigation("ComplementaryUnits");

                    b.Navigation("GeneralUnits");

                    b.Navigation("OptionnalUnits");

                    b.Navigation("SpecificUnits");
                });

            modelBuilder.Entity("Pdc.Infrastructure.Entities.MinisterialSpecification.CompetencyEntity", b =>
                {
                    b.HasOne("Pdc.Infrastructure.Entities.Versioning.ChangeRecordEntity", "CurrentVersion")
                        .WithMany()
                        .HasForeignKey("CurrentVersionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Pdc.Infrastructure.Entities.CourseFramework.ProgramOfStudyEntity", "ProgramOfStudy")
                        .WithMany("Competencies")
                        .HasForeignKey("ProgramOfStudyCode")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Pdc.Domain.Entities.Common.Units", "Units")
                        .WithMany()
                        .HasForeignKey("UnitsId");

                    b.Navigation("CurrentVersion");

                    b.Navigation("ProgramOfStudy");

                    b.Navigation("Units");
                });

            modelBuilder.Entity("Pdc.Infrastructure.Entities.Versioning.ChangeDetailEntity", b =>
                {
                    b.HasOne("Pdc.Infrastructure.Entities.Versioning.ChangeRecordEntity", null)
                        .WithMany("ChangeDetails")
                        .HasForeignKey("ChangeRecordEntityId");

                    b.HasOne("Pdc.Infrastructure.Entities.Versioning.ChangeRecordEntity", "ChangeRecord")
                        .WithMany()
                        .HasForeignKey("ChangeRecordId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Pdc.Infrastructure.Entities.Versioning.ChangeableEntity", "Changeable")
                        .WithMany()
                        .HasForeignKey("ChangeableId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ChangeRecord");

                    b.Navigation("Changeable");
                });

            modelBuilder.Entity("Pdc.Infrastructure.Entities.Versioning.ChangeRecordEntity", b =>
                {
                    b.HasOne("Pdc.Infrastructure.Entities.Versioning.ChangeRecordEntity", "NextVersion")
                        .WithMany()
                        .HasForeignKey("NextVersionId");

                    b.HasOne("Pdc.Infrastructure.Entities.Versioning.ChangeRecordEntity", "ParentVersion")
                        .WithMany()
                        .HasForeignKey("ParentVersionId");

                    b.Navigation("NextVersion");

                    b.Navigation("ParentVersion");
                });

            modelBuilder.Entity("Pdc.Infrastructure.Entities.Versioning.ComplementaryInformationEntity", b =>
                {
                    b.HasOne("Pdc.Infrastructure.Entities.Versioning.ChangeRecordEntity", null)
                        .WithMany("ComplementaryInformations")
                        .HasForeignKey("ChangeRecordEntityId");

                    b.HasOne("Pdc.Infrastructure.Entities.Versioning.ChangeRecordEntity", "WrittenOnVersion")
                        .WithMany()
                        .HasForeignKey("ChangeRecordId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Pdc.Infrastructure.Entities.Versioning.ChangeableEntity", null)
                        .WithMany("ComplementaryInformations")
                        .HasForeignKey("ChangeableEntityId");

                    b.HasOne("Pdc.Infrastructure.Entities.Versioning.ChangeableEntity", "Changeable")
                        .WithMany()
                        .HasForeignKey("ChangeableId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Changeable");

                    b.Navigation("WrittenOnVersion");
                });

            modelBuilder.Entity("Pdc.Infrastructure.Entities.CourseFramework.ContentElementEntity", b =>
                {
                    b.HasOne("Pdc.Infrastructure.Entities.CourseFramework.CourseFrameworkPerformanceCriteriaEntity", null)
                        .WithMany("ContentElements")
                        .HasForeignKey("CourseFrameworkPerformanceCriteriaEntityId");

                    b.HasOne("Pdc.Infrastructure.Entities.CourseFramework.CourseFrameworkPerformanceCriteriaEntity", "CourseFrameworkPerformanceCriteria")
                        .WithMany()
                        .HasForeignKey("CourseFrameworkPerformanceCriteriaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CourseFrameworkPerformanceCriteria");
                });

            modelBuilder.Entity("Pdc.Infrastructure.Entities.MinisterialSpecification.CompetencyElementEntity", b =>
                {
                    b.HasOne("Pdc.Infrastructure.Entities.MinisterialSpecification.CompetencyEntity", null)
                        .WithMany("CompetencyElements")
                        .HasForeignKey("CompetencyId");
                });

            modelBuilder.Entity("Pdc.Infrastructure.Entities.MinisterialSpecification.RealisationContextEntity", b =>
                {
                    b.HasOne("Pdc.Infrastructure.Entities.MinisterialSpecification.CompetencyEntity", null)
                        .WithMany("RealisationContexts")
                        .HasForeignKey("CompetencyCode");
                });

            modelBuilder.Entity("Pdc.Infrastructure.Entities.CourseFramework.CourseFrameworkEntity", b =>
                {
                    b.Navigation("CourseFrameworkCompetencyElements");

                    b.Navigation("CourseFrameworkPerformanceCriterias");
                });

            modelBuilder.Entity("Pdc.Infrastructure.Entities.CourseFramework.CourseFrameworkPerformanceCriteriaEntity", b =>
                {
                    b.Navigation("ContentElements");
                });

            modelBuilder.Entity("Pdc.Infrastructure.Entities.CourseFramework.ProgramOfStudyEntity", b =>
                {
                    b.Navigation("Competencies");
                });

            modelBuilder.Entity("Pdc.Infrastructure.Entities.MinisterialSpecification.CompetencyEntity", b =>
                {
                    b.Navigation("CompetencyElements");

                    b.Navigation("RealisationContexts");
                });

            modelBuilder.Entity("Pdc.Infrastructure.Entities.Versioning.ChangeRecordEntity", b =>
                {
                    b.Navigation("ChangeDetails");

                    b.Navigation("ComplementaryInformations");
                });

            modelBuilder.Entity("Pdc.Infrastructure.Entities.Versioning.ChangeableEntity", b =>
                {
                    b.Navigation("ComplementaryInformations");
                });
#pragma warning restore 612, 618
        }
    }
}
